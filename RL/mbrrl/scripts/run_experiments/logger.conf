* Global: ## We need to start level with star '*' and end with colon ':'
    ##FORMAT                  =   "%level [1;37m%logger  %func#[0m %msg"
    FORMAT                  =   "%msg"
    FILENAME                =   "/run_mbrrl/RL/mbrrl//results-2323/current/mbrrl.log"
    ENABLED                 =   true
    TO_FILE                 =   true
    TO_STANDARD_OUTPUT      =   true
    SUBSECOND_PRECISION     =   3
    PERFORMANCE_TRACKING    =   false
    MAX_LOG_FILE_SIZE       =   500000000 ##2097152  ## Throw log files away after 2MB

## Following configuration only defines FORMAT for INFO, rest of the configurations are used from ALL configurations above
##* INFO:
##     FORMAT         =   "%level-%logger [1;37m %func:[0m %msg"

##* WARNING:
##    FORMAT                  =   "[1;33m*%level! [1;37m%logger  %func#[0m %msg"

##* ERROR:
##    FORMAT                  =   "[1;31m**%level!!!! [1;37m%logger  %func#[0m %msg"




##Enabled                 bool    Determines whether or not corresponding level for logger is enabled. You may disable all logs by using el::Level::Global
##To_File                 bool    Whether or not to write corresponding log to log file
##To_Standard_Output      bool    Whether or not to write logs to standard output e.g, terminal or command prompt
##Format                  char*   Determines format/pattern of logging for corresponding level and logger.
##Filename                char*   Determines log file (full path) to write logs to for corresponding level and logger
##Subsecond_Precision     uint    Specifies subsecond precision (previously called 'milliseconds width'). Width can be within range (1-6)
##Performance_Tracking    bool    Determines whether or not performance tracking is enabled. This does not depend on logger or level. Performance tracking always uses 'performance' logger unless specified
##Max_Log_File_Size       size_t  If log file size of corresponding level is >= specified size, log file will be truncated.
##Log_Flush_Threshold     size_t  Specifies number of log entries to hold until we flush pending log data