#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""

Run experiments using experiments_settings_vd.py in the order of learned10 > learned50 > learned
Then put all logfolders into this folder

Run this command:
    $ grep -r ">> Avg variational distance" > ../output.txt

Open output.txt and edit the contents to fit the column format in variational-distance.ods
    Trim content in this format
    Domain  Logfolder#  VD
    Copy and paste to variationa-distance.ods

Once done, sort accordingly to Logfolder then Domain

Add columns 'Original order', Model#'' and 'Transition Size' and fill them up:
    Original order is 1 to ...
    For every row, Model# ranges from 0 to 9 and repeats
    For every 100 rows, Transition Size range from 10, 50, 500 and repeats

Sort in this order: Logfolder > Model > Transition Size > Domain

Copy VD column to plot_variational_distances.py and run it to generate plot figure

@author: alvin
"""

import matplotlib.pyplot as plt
import math


domain_order = ['Recon', 'Robot Fetch', 'Service Robot', 'Robot Inspection']
transition_size_order = [10, 50, 500]
model_order = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
num_data = 10
# data is ordered by forall domain { forall transition size { forall model {...}}}
# Example: 1st data is Recon, transition size 10, model #0
# Example: 11-th data is Recon, transition size 50, model #0
# Example: 30-th data is Recon, transition size 500, model #9
variational_distances = [0.280918, 0.0311391, 0.0707831, 0.034203, 0.0492674, 0.103248, 0.0577694, 0.0463287, 0.0488913, 0.0595138, 0.282668, 0.0335181, 0.0515931, 0.0390965, 0.0516383, 0.0807099, 0.0448234, 0.0458213, 0.0292083, 0.0734481, 0.26477, 0.0328417, 0.0690148, 0.0547449, 0.0470094, 0.0850227, 0.0487496, 0.0411405, 0.0326596, 0.0577617, 0.376222, 0.0279644, 0.0639786, 0.0352017, 0.0527509, 0.100448, 0.0472312, 0.0598562, 0.0289558, 0.0581698, 0.382137, 0.0348923, 0.0508383, 0.0394594, 0.0532949, 0.0995434, 0.0462089, 0.0406675, 0.023309, 0.0583092, 0.278958, 0.0305231, 0.0472556, 0.0417428, 0.0630088, 0.102368, 0.0435226, 0.0438582, 0.0296606, 0.0601273, 0.291011, 0.0446387, 0.0685052, 0.0382832, 0.0507955, 0.0880906, 0.0499894, 0.0442006, 0.0318869, 0.0594118, 0.372976, 0.0324889, 0.050731, 0.0406126, 0.0495, 0.0985197, 0.0456158, 0.0444841, 0.0285116, 0.05485, 0.410357, 0.0296177, 0.0640735, 0.038335, 0.0504687, 0.0861042, 0.0474565, 0.045565, 0.0313798, 0.0544601, 0.382761, 0.0361567, 0.0702616, 0.041778, 0.0458366, 0.101925, 0.0477576, 0.0442103, 0.022475, 0.0580428, 0.289712, 0.105637, 0.0563214, 0.0440772, 0.0570746, 0.167753, 0.0517261, 0.0438266, 0.0305178, 0.112805, 0.255159, 0.0380977, 0.0430642, 0.0422037, 0.054884, 0.0928697, 0.0607565, 0.0457459, 0.0275492, 0.0634896, 0.282429, 0.0382776, 0.0580435, 0.0473833, 0.101262, 0.0886059, 0.0534636, 0.0480941, 0.0348953, 0.0673902, 0.228364, 0.0407483, 0.0639523, 0.0405241, 0.0552641, 0.0772456, 0.12162, 0.0529386, 0.0289474, 0.0591904, 0.297416, 0.0408973, 0.0651153, 0.0971908, 0.064933, 0.092128, 0.0516423, 0.0987641, 0.0382992, 0.057396, 0.186715, 0.040761, 0.0523158, 0.0546813, 0.0529335, 0.0943852, 0.0513826, 0.0557121, 0.0421847, 0.0617255, 0.218794, 0.0440416, 0.0570762, 0.0489004, 0.0568324, 0.0921098, 0.0558166, 0.0476969, 0.047614, 0.0573641, 0.368152, 0.0382017, 0.0596716, 0.044163, 0.053006, 0.0816932, 0.0538972, 0.0447269, 0.0276011, 0.0582243, 0.27925, 0.0438814, 0.146166, 0.0453032, 0.0584451, 0.0857383, 0.0537344, 0.0482658, 0.0354962, 0.0706251, 0.327736, 0.049536, 0.0562945, 0.0404593, 0.059128, 0.0783245, 0.0564297, 0.04386, 0.0994066, 0.0613571, 0.410357, 0.0446387, 0.0685052, 0.041778, 0.0516383, 0.102368, 0.0499894, 0.045565, 0.023309, 0.0544601, 0.372976, 0.0324889, 0.0508383, 0.0394594, 0.0630088, 0.101925, 0.0448234, 0.0442006, 0.0318869, 0.0601273, 0.282668, 0.0296177, 0.0639786, 0.0352017, 0.0495, 0.0861042, 0.0474565, 0.0406675, 0.022475, 0.0583092, 0.280918, 0.0279644, 0.0640735, 0.0382832, 0.0470094, 0.100448, 0.0577694, 0.0411405, 0.0488913, 0.0734481, 0.291011, 0.0335181, 0.0472556, 0.0417428, 0.0527509, 0.0995434, 0.0435226, 0.0438582, 0.0285116, 0.0594118, 0.382137, 0.0348923, 0.0702616, 0.034203, 0.0492674, 0.0807099, 0.0477576, 0.0598562, 0.0296606, 0.0577617, 0.278958, 0.0328417, 0.0690148, 0.0406126, 0.0507955, 0.0880906, 0.0456158, 0.0458213, 0.0326596, 0.05485, 0.382761, 0.0311391, 0.0707831, 0.0547449, 0.0532949, 0.0985197, 0.0487496, 0.0463287, 0.0292083, 0.0581698, 0.376222, 0.0361567, 0.050731, 0.0390965, 0.0504687, 0.0850227, 0.0462089, 0.0444841, 0.0313798, 0.0595138, 0.26477, 0.0305231, 0.0515931, 0.038335, 0.0458366, 0.103248, 0.0472312, 0.0442103, 0.0289558, 0.0580428, 0.44917, 0.444697, 0.442051, 0.441616, 0.451664, 0.45409, 0.454129, 0.446017, 0.441629, 0.427389, 0.463803, 0.438313, 0.431979, 0.443551, 0.468382, 0.449564, 0.443645, 0.442774, 0.449404, 0.453644, 0.443303, 0.457563, 0.452832, 0.444013, 0.453265, 0.464749, 0.433849, 0.428466, 0.443563, 0.429714, 0.450043, 0.460618, 0.458013, 0.463962, 0.454761, 0.453288, 0.456, 0.429694, 0.463969, 0.436022, 0.445117, 0.455759, 0.434771, 0.459515, 0.458102, 0.448322, 0.438088, 0.445108, 0.450272, 0.434904, 0.441359, 0.458266, 0.436338, 0.46181, 0.467849, 0.44611, 0.436041, 0.449059, 0.459524, 0.447924, 0.461642, 0.440288, 0.454756, 0.445358, 0.466482, 0.466736, 0.459167, 0.420861, 0.461175, 0.450876, 0.443766, 0.445647, 0.441039, 0.449393, 0.470164, 0.462631, 0.44266, 0.422763, 0.444024, 0.424901, 0.459337, 0.436199, 0.455505, 0.461166, 0.458821, 0.447896, 0.456729, 0.420208, 0.445369, 0.427983, 0.460996, 0.438818, 0.434233, 0.450262, 0.453648, 0.464155, 0.436564, 0.417474, 0.461818, 0.450048, 0.461642, 0.462757, 0.456264, 0.462461, 0.471784, 0.451969, 0.461385, 0.451826, 0.444902, 0.430114, 0.444648, 0.458978, 0.454819, 0.465919, 0.467894, 0.468542, 0.456729, 0.446017, 0.462469, 0.427782, 0.465769, 0.458266, 0.455505, 0.443856, 0.454374, 0.455525, 0.436387, 0.446938, 0.443868, 0.433066, 0.451605, 0.439777, 0.435793, 0.446286, 0.468382, 0.448177, 0.457466, 0.424075, 0.451827, 0.451713, 0.462296, 0.440628, 0.460293, 0.445669, 0.453518, 0.464205, 0.441041, 0.42064, 0.461229, 0.438022, 0.443609, 0.447346, 0.434588, 0.46181, 0.468921, 0.450421, 0.445406, 0.445184, 0.446298, 0.450118, 0.44543, 0.457622, 0.439374, 0.447964, 0.45553, 0.464749, 0.437558, 0.431892, 0.44568, 0.450876, 0.46105, 0.441302, 0.43742, 0.46122, 0.456919, 0.449851, 0.438441, 0.422102, 0.461818, 0.429112, 0.44605, 0.443136, 0.443863, 0.44489, 0.460109, 0.449132, 0.456061, 0.426446, 0.465926, 0.430908, 0.447735, 0.438647, 0.4367, 0.451817, 0.455019, 0.46535, 0.43914, 0.423202, 0.447975, 0.456162, 0.445117, 0.458266, 0.458013, 0.443551, 0.454761, 0.466736, 0.456, 0.428466, 0.444024, 0.427389, 0.450043, 0.460618, 0.434233, 0.441616, 0.458821, 0.449564, 0.459167, 0.417474, 0.441629, 0.434904, 0.463803, 0.438313, 0.452832, 0.46181, 0.467849, 0.448322, 0.443645, 0.445108, 0.449404, 0.427983, 0.441359, 0.444697, 0.431979, 0.459515, 0.466482, 0.462631, 0.436564, 0.446017, 0.443563, 0.447924, 0.44917, 0.455759, 0.442051, 0.449393, 0.458102, 0.447896, 0.44266, 0.442774, 0.459524, 0.436022, 0.461642, 0.438818, 0.455505, 0.444013, 0.470164, 0.44611, 0.456729, 0.422763, 0.461818, 0.453644, 0.460996, 0.436199, 0.436338, 0.445358, 0.451664, 0.464155, 0.436041, 0.429694, 0.450272, 0.450048, 0.459337, 0.457563, 0.434771, 0.461166, 0.468382, 0.464749, 0.438088, 0.420861, 0.463969, 0.424901, 0.443766, 0.440288, 0.454756, 0.463962, 0.453265, 0.453288, 0.454129, 0.420208, 0.461175, 0.450876, 0.443303, 0.445647, 0.441039, 0.450262, 0.453648, 0.45409, 0.433849, 0.449059, 0.445369, 0.429714, 0.360093, 0.28783, 0.344378, 0.335465, 0.361319, 0.303036, 0.327606, 0.362179, 0.359834, 0.294502, 0.360201, 0.347134, 0.297871, 0.225351, 0.283725, 0.355177, 0.27372, 0.2413, 0.359637, 0.347354, 0.349219, 0.230829, 0.344448, 0.336906, 0.300429, 0.336042, 0.28631, 0.287658, 0.306472, 0.35972, 0.309691, 0.346379, 0.345505, 0.256648, 0.290976, 0.296579, 0.220041, 0.353908, 0.281987, 0.342753, 0.359977, 0.34503, 0.330217, 0.330266, 0.359663, 0.356377, 0.255182, 0.307648, 0.314168, 0.299327, 0.281822, 0.347348, 0.290197, 0.33421, 0.358899, 0.236287, 0.329178, 0.362341, 0.344575, 0.234138, 0.243989, 0.335602, 0.270579, 0.334734, 0.356703, 0.344201, 0.329966, 0.3004, 0.250343, 0.358452, 0.303068, 0.271855, 0.343761, 0.292535, 0.362438, 0.355422, 0.333144, 0.361134, 0.35829, 0.281605, 0.339259, 0.343864, 0.333284, 0.344897, 0.233409, 0.356696, 0.332731, 0.3542, 0.342743, 0.358988, 0.359564, 0.295961, 0.236052, 0.280038, 0.358546, 0.278559, 0.347857, 0.36016, 0.359433, 0.358643, 0.295581, 0.186845, 0.229958, 0.251256, 0.31372, 0.323411, 0.303946, 0.263226, 0.30886, 0.28388, 0.242866, 0.312117, 0.191995, 0.219971, 0.244324, 0.192584, 0.27486, 0.294688, 0.323216, 0.308965, 0.319563, 0.269765, 0.271172, 0.283371, 0.335909, 0.258071, 0.168805, 0.182953, 0.299989, 0.246774, 0.202395, 0.281314, 0.171876, 0.307066, 0.346753, 0.318762, 0.325352, 0.247649, 0.283528, 0.328628, 0.181338, 0.228529, 0.308692, 0.263172, 0.257768, 0.278173, 0.191001, 0.204674, 0.24979, 0.253014, 0.266735, 0.318265, 0.282719, 0.171427, 0.285229, 0.171904, 0.219058, 0.318019, 0.271237, 0.332287, 0.28277, 0.304393, 0.25702, 0.193566, 0.287868, 0.312651, 0.261522, 0.337722, 0.213816, 0.175426, 0.299138, 0.165432, 0.285107, 0.27876, 0.177664, 0.288209, 0.249587, 0.289906, 0.193838, 0.29129, 0.331507, 0.280204, 0.306733, 0.324659, 0.199462, 0.235685, 0.311767, 0.331985, 0.331378, 0.195838, 0.326653, 0.251579, 0.31399, 0.312868, 0.290262, 0.289726, 0.280808, 0.295261, 0.337584, 0.284619, 0.360093, 0.28783, 0.345505, 0.256648, 0.290976, 0.344201, 0.333144, 0.231887, 0.342743, 0.224807, 0.349219, 0.347348, 0.344378, 0.335465, 0.362438, 0.356696, 0.327606, 0.287658, 0.314168, 0.342753, 0.23442, 0.346379, 0.344448, 0.33421, 0.223624, 0.355422, 0.27372, 0.362341, 0.359433, 0.347354, 0.303068, 0.343864, 0.297871, 0.280038, 0.356703, 0.278559, 0.332731, 0.3542, 0.281987, 0.281605, 0.309691, 0.295961, 0.227228, 0.344897, 0.359663, 0.303036, 0.255182, 0.361134, 0.359637, 0.358643, 0.359564, 0.34503, 0.290197, 0.334734, 0.283725, 0.226745, 0.329966, 0.36016, 0.306472, 0.294502, 0.339259, 0.335602, 0.330217, 0.330266, 0.358899, 0.356377, 0.347857, 0.362179, 0.344575, 0.358988, 0.360201, 0.347134, 0.333284, 0.215496, 0.361319, 0.336042, 0.329178, 0.3004, 0.359834, 0.299327, 0.281822, 0.221395, 0.343761, 0.336906, 0.358546, 0.355177, 0.28631, 0.353908, 0.35829, 0.358452, 0.359977, 0.271855, 0.270579, 0.292535, 0.300429, 0.296579, 0.210151, 0.307648, 0.241064, 0.35972, 0.446566, 0.410934, 0.127807, 0.329344, 0.307744, 0.136468, 0.156121, 0.334947, 0.475983, 0.314929, 0.255266, 0.410492, 0.400017, 0.322566, 0.133384, 0.0679381, 0.124902, 0.330583, 0.106686, 0.398226, 0.166327, 0.330096, 0.332987, 0.302342, 0.132202, 0.359904, 0.0713709, 0.317693, 0.550941, 0.368703, 0.388347, 0.396471, 0.356317, 0.323353, 0.312673, 0.379216, 0.386146, 0.32528, 0.540731, 0.312988, 0.40793, 0.359678, 0.175549, 0.301078, 0.365673, 0.310348, 0.413468, 0.313936, 0.495742, 0.368048, 0.500862, 0.153629, 0.36147, 0.0885897, 0.369719, 0.313558, 0.429416, 0.0890593, 0.272407, 0.350847, 0.239283, 0.39022, 0.15258, 0.0588535, 0.0651691, 0.370816, 0.433984, 0.331051, 0.613807, 0.185748, 0.419338, 0.129565, 0.35748, 0.0891246, 0.354072, 0.144684, 0.40494, 0.0792068, 0.523435, 0.0993436, 0.406011, 0.349269, 0.388529, 0.31124, 0.318005, 0.361604, 0.388968, 0.333171, 0.401842, 0.136521, 0.492662, 0.181978, 0.363019, 0.322748, 0.341361, 0.311081, 0.403338, 0.0522574, 0.264684, 0.331076, 0.162963, 0.409382, 0.407398, 0.467495, 0.290575, 0.168899, 0.419051, 0.404463, 0.208404, 0.329417, 0.46491, 0.414339, 0.142696, 0.219519, 0.145283, 0.286552, 0.42425, 0.296526, 0.55098, 0.407547, 0.428978, 0.337272, 0.202631, 0.425495, 0.301246, 0.447994, 0.379928, 0.301045, 0.333974, 0.465046, 0.360211, 0.417601, 0.34104, 0.282998, 0.438838, 0.399417, 0.428571, 0.162049, 0.514045, 0.319855, 0.400311, 0.130233, 0.353201, 0.422503, 0.428525, 0.407871, 0.430771, 0.399982, 0.574073, 0.411878, 0.143183, 0.362566, 0.361594, 0.270853, 0.437171, 0.411264, 0.454813, 0.401531, 0.379126, 0.159461, 0.426361, 0.345907, 0.341453, 0.280461, 0.300236, 0.407871, 0.423801, 0.442812, 0.564243, 0.340121, 0.375813, 0.175235, 0.365375, 0.422503, 0.437171, 0.182164, 0.250386, 0.226114, 0.514045, 0.192868, 0.364553, 0.409299, 0.361808, 0.200708, 0.472823, 0.315101, 0.140779, 0.401531, 0.508855, 0.432483, 0.432732, 0.453333, 0.337255, 0.422559, 0.195611, 0.299963, 0.42845, 0.28865, 0.519544, 0.428587, 0.500862, 0.396471, 0.139833, 0.094863, 0.0868598, 0.0679381, 0.244129, 0.0522574, 0.113516, 0.0993436, 0.388347, 0.138893, 0.332987, 0.0891246, 0.369719, 0.361604, 0.079488, 0.333171, 0.444149, 0.331076, 0.157143, 0.129565, 0.175549, 0.302342, 0.312673, 0.311081, 0.0713709, 0.317693, 0.272407, 0.368048, 0.255266, 0.330096, 0.36147, 0.281817, 0.133384, 0.123255, 0.413468, 0.0890593, 0.15545, 0.185748, 0.239283, 0.173216, 0.15258, 0.083186, 0.0867274, 0.0863783, 0.433984, 0.0759054, 0.106686, 0.0999166, 0.254709, 0.181978, 0.388529, 0.329344, 0.118844, 0.0830773, 0.11178, 0.334947, 0.550941, 0.146973, 0.218621, 0.121278, 0.3232, 0.0817626, 0.300698, 0.127063, 0.121783, 0.276861, 0.613807, 0.115314, 0.406011, 0.119831, 0.173251, 0.322566, 0.341361, 0.379216, 0.40494, 0.0714771, 0.215668, 0.398226, 0.169362, 0.410934, 0.121459, 0.093953, 0.12544, 0.35579, 0.156121, 0.0943933, 0.255684, 0.0985643, 0.455368, 0.38832, 0.13306, 0.0588535, 0.0651691, 0.144684, 0.110554, 0.0892275, 0.523435, 0.354758]


plot_data = {}


def list_addition(list1, list2):
    zipped = zip(list1, list2)
    result = []
    for v1, v2 in zipped:
        result.append(v1+v2)
    return result


def list_substraction(list1, list2):
    zipped = zip(list1, list2)
    result = []
    for v1, v2 in zipped:
        result.append(v1-v2)
    return result



x = range(1, len(model_order)+1)
index = 0
subplot_x = 0
subplot_y = 0
fig, ax = plt.subplots(2, 2)
plt.setp(ax, ylim=[0.0, 1.0], yticks=[0.0, 0.5, 1.0], xticks=[2, 4, 6, 8, 10])

for domain in domain_order:
    avg_variational_distances_matrix = []
    std_devs_matrix = []
    for transition_size in transition_size_order:
        avg_variational_distances = []
        std_devs = []
        for model in model_order:
            values = variational_distances[index:index+num_data]
            mean_value = sum(values) / len(values)
            sum_difference = 0
            for value in values:
                sum_difference += pow(value-mean_value, 2)
            avg_variational_distances.append(mean_value)
            std_devs.append(math.sqrt(sum_difference/len(values)))
            index += num_data
        avg_variational_distances_matrix.append(avg_variational_distances)
        std_devs_matrix.append(std_devs)
        ax[subplot_x][subplot_y].title.set_text(domain)
        ax[subplot_x][subplot_y].plot(x, avg_variational_distances, linewidth=2, label=transition_size, marker='o')
        ax[subplot_x][subplot_y].fill_between(x, list_substraction(avg_variational_distances, std_devs), list_addition(avg_variational_distances, std_devs), alpha=0.2)
        if subplot_x == 1:
            ax[subplot_x][subplot_y].set(xlabel = 'Model')
        if subplot_y == 0:
            ax[subplot_x][subplot_y].set(ylabel = 'Avg. VD')
    subplot_y += 1
    if subplot_y > 1:
        subplot_y = -1
        subplot_x += 1
    # plot_data[domain] = (avg_variational_distances_matrix, std_devs_matrix)
    # plt.plot(x, avg_variational_distances_matrix, linewidth=2, label='50', marker='x')
fig.tight_layout()
#plt.xticks(range(1, num_data+1, 1))
plt.legend(ncol=3, loc='upper center', bbox_to_anchor=(-0.1, -0.3), framealpha=0.0)
plt.savefig('result-variational-distance.png', format='png', bbox_inches="tight", dpi=300)
